                                                        NOTES
                                                        -----
Indecision App
--------------

ES6 Classes: Part I
    - class Person {
          constructor(name = 'Anonymous') {
              this.name = name;
          }
      }
        - You are telling the class that "This unique instance of this class's name = whatever was passed in (name in this case)

ES6 Classes: Part II
    - Inheritance, overriding parent methods, double-bangs -> See Example 1

Creating a React Component
    - It's ultimately just an ES6 class
    - See Example 2
        - When we want to convert an ES6 class to a React component, we extend React.Component
            - Globally, the two things from React we can always extend is React itself, and then the ReactDOM
        - Every React Component MUST implement a special method called 'render()'
        - In our 'jsx' variable, we render our component by calling the class name in its own tag
            - Looks like a custom HTML tag
    - Class names MUST be uppercase
        - It's what helps React differentiate between a React component and an HTML element

Nesting Components
    - class IndecisionApp extends React.Component {
          render() {
              return (
                  <div>
                      <Header />
                      <Action />
                      <Options />
                      <AddOption />
                  </div>
              );
          }
      }
      ReactDOM.render(<IndecisionApp />, document.getElementById('app'));

Component Props
    - Similar to setting attributes in HTML (id, class, etc)
    - render() {
          return (
              <div>
                  <Header title="Test value"/>
              </div>
          );
      }
        - How do we get access to our 'title' prop we're passing in??
        - In our React Components, we have access to the 'this' keyword, just like we do in ES6 Classes
            - 'this' has a property on it called props
                - class Header extends React.Component {
                    render() {
                        console.log(this.props); // Using the above example, the console displays -> {title: "Test value"}
                    }
                }

        - We can use variables outside of the render() method as well if we wanted to

            - render() {
                  const title = 'Indecision';
                  const subtitle = 'Put your life in the hands of a computer';
                  return (
                      <div>
                          <Header title={title} subtitle={subtitle}/>
                      </div>
                  );
              }

              class Header extends React.Component {
                  render() {
                      return (
                          <div>
                              <h1>{this.props.title}</h1>
                              <h2>{this.props.subtitle}</h2>
                          </div>
                      );
                  }
              }  

    - Passing props to multiple components
        - See Example 3

Events & Methods
    - 






                                            EXAMPLES
                                            --------

Example 1 - Inheritance, Overriding, Double-bangs
---------
class Person {

    constructor(name = 'Anonymous', age = 0) {
        this.name = name;
        this.age = age;
    }
    getGreeting() {
        return `Hi. I am ${this.name}!`;
    }
    getDescription() {
        return `${this.name} is ${this.age} year(s) old.`;
    }
}

class Student extends Person {

    constructor(name, age, major) {
        super(name, age);
        this.major = major;
    }
    hasMajor() {
        return !!this.major;
    }
    getDescription() {
        let description = super.getDescription();
        if(this.hasMajor()) {
            description += ` Their major is ${this.major}.`;
        }
        return description;
    }
}

const me = new Student('Michael Ababio', 26, 'CompSci');
console.log(me.getDescription());       // Displays 'Michael Ababio is 26 year(S) old. Their major is CompSci.'

const other = new Student();
console.log(other.getDescription());    // Displays 'Anonymous is 0 year(s) old.'


Example 2 - Our First React Component
---------
class Header extends React.Component {
    render() {
        return <p>This is from Header</p>;
    }
}

const jsx = (
    <div>
        <h1>Title</h1>
        <Header />
    </div>
);

ReactDOM.render(jsx, document.getElementById('app'));


Example 3 - Passing Props to Multiple Components
---------
class IndecisionApp extends React.Component {
    render() {
        const title = 'Indecision';
        const subtitle = 'Put your life in the hands of a computer';
        const options = ['Thing one', 'Thing two', 'Thing four'];
        return (
            <div>
                <Header title={title} subtitle={subtitle}/>
                <Action />
                <Options options={options}/>
                <AddOption />
            </div>
        );
    }
}

class Header extends React.Component {
    render() {
        return (
            <div>
                <h1>{this.props.title}</h1>
                <h2>{this.props.subtitle}</h2>
            </div>
        );
    }
}

class Options extends React.Component {
    render() {
        return (
            <div>
                {this.props.options.map((option) => <Option key={option} optionText={option}/>)}
            </div>
        );
    }
}

class Option extends React.Component {
    render() {
        return (
            <div>{this.props.optionText}</div>
        );
    }
}

ReactDOM.render(<IndecisionApp />, document.getElementById('app'));


Example 4 -
---------
